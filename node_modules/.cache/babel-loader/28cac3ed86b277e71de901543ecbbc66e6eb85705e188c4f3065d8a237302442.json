{"ast":null,"code":"import { API_BASE_URL } from \"./config\";\nimport { getAuthHeader } from \"./auth\";\nexport const fetchUser = async username => {\n  const response = await fetch(`${API_BASE_URL}/users/${username}`);\n  if (!response.ok) throw new Error(\"User not found\");\n  return response.json();\n};\nexport const fetchCurrentUser = async credentials => {\n  const response = await fetch(`${API_BASE_URL}/me`, {\n    headers: getAuthHeader(credentials)\n  });\n  if (!response.ok) throw new Error(\"Failed to fetch user\");\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","getAuthHeader","fetchUser","username","response","fetch","ok","Error","json","fetchCurrentUser","credentials","headers"],"sources":["D:/Папка/Users/Administrator/Desktop/V семестр/Front-end/MKR/MKRL/microblog/src/api/users.js"],"sourcesContent":["import { API_BASE_URL } from \"./config\";\r\nimport { getAuthHeader } from \"./auth\";\r\n\r\nexport const fetchUser = async (username) => {\r\n  const response = await fetch(`${API_BASE_URL}/users/${username}`);\r\n  if (!response.ok) throw new Error(\"User not found\");\r\n  return response.json();\r\n};\r\n\r\nexport const fetchCurrentUser = async (credentials) => {\r\n  const response = await fetch(`${API_BASE_URL}/me`, {\r\n    headers: getAuthHeader(credentials),\r\n  });\r\n  if (!response.ok) throw new Error(\"Failed to fetch user\");\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,UAAU;AACvC,SAASC,aAAa,QAAQ,QAAQ;AAEtC,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAQ,IAAK;EAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,UAAUG,QAAQ,EAAE,CAAC;EACjE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;EACnD,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,WAAW,IAAK;EACrD,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,KAAK,EAAE;IACjDW,OAAO,EAAEV,aAAa,CAACS,WAAW;EACpC,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzD,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0430\\u043F\\u043A\\u0430\\\\Users\\\\Administrator\\\\Desktop\\\\V \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\Front-end\\\\MKR\\\\MKRL\\\\client\\\\src\\\\pages\\\\SinglePostPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAuth } from \"../hooks/UseAuth\";\nimport Post from \"../components/posts/Post\";\nimport styled from \"styled-components\";\nimport { API_BASE_URL } from \"../api/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SinglePostContainer = styled.div`\n  max-width: 800px;\n  margin: 40px auto;\n  padding: 20px;\n`;\n_c = SinglePostContainer;\nconst SinglePostPage = () => {\n  _s();\n  const {\n    username,\n    postId\n  } = useParams();\n  const {\n    credentials\n  } = useAuth();\n  const [post, setPost] = useState(null);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/users/${username}/posts/${postId}`, {\n          headers: credentials ? {\n            Authorization: `Basic ${btoa(`${credentials.username}:${credentials.password}`)}`\n          } : {}\n        });\n        if (!response.ok) {\n          throw new Error(\"Post not found\");\n        }\n        const data = await response.json();\n        setPost(data);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchPost();\n  }, [username, postId, credentials]);\n  const handleLikeToggle = postId => {\n    setPost(prevPost => ({\n      ...prevPost,\n      is_liked: !prevPost.is_liked,\n      likes: prevPost.is_liked ? prevPost.likes - 1 : prevPost.likes + 1\n    }));\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(SinglePostContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(SinglePostContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(SinglePostContainer, {\n    children: /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      onLikeToggle: handleLikeToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(SinglePostPage, \"YzzxEm6RbMzXXObrvF5nUbjR7Ew=\", false, function () {\n  return [useParams, useAuth];\n});\n_c2 = SinglePostPage;\nexport default SinglePostPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"SinglePostContainer\");\n$RefreshReg$(_c2, \"SinglePostPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useAuth","Post","styled","API_BASE_URL","jsxDEV","_jsxDEV","SinglePostContainer","div","_c","SinglePostPage","_s","username","postId","credentials","post","setPost","error","setError","fetchPost","response","fetch","headers","Authorization","btoa","password","ok","Error","data","json","err","message","handleLikeToggle","prevPost","is_liked","likes","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onLikeToggle","_c2","$RefreshReg$"],"sources":["D:/Папка/Users/Administrator/Desktop/V семестр/Front-end/MKR/MKRL/client/src/pages/SinglePostPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"../hooks/UseAuth\";\r\nimport Post from \"../components/posts/Post\";\r\nimport styled from \"styled-components\";\r\nimport { API_BASE_URL } from \"../api/config\";\r\n\r\nconst SinglePostContainer = styled.div`\r\n  max-width: 800px;\r\n  margin: 40px auto;\r\n  padding: 20px;\r\n`;\r\n\r\nconst SinglePostPage = () => {\r\n  const { username, postId } = useParams();\r\n  const { credentials } = useAuth();\r\n  const [post, setPost] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${API_BASE_URL}/users/${username}/posts/${postId}`,\r\n          {\r\n            headers: credentials\r\n              ? {\r\n                  Authorization: `Basic ${btoa(\r\n                    `${credentials.username}:${credentials.password}`\r\n                  )}`,\r\n                }\r\n              : {},\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Post not found\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setPost(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n\r\n    fetchPost();\r\n  }, [username, postId, credentials]);\r\n\r\n  const handleLikeToggle = (postId) => {\r\n    setPost((prevPost) => ({\r\n      ...prevPost,\r\n      is_liked: !prevPost.is_liked,\r\n      likes: prevPost.is_liked ? prevPost.likes - 1 : prevPost.likes + 1,\r\n    }));\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <SinglePostContainer>\r\n        <p style={{ color: \"red\" }}>{error}</p>\r\n      </SinglePostContainer>\r\n    );\r\n  }\r\n\r\n  if (!post) {\r\n    return (\r\n      <SinglePostContainer>\r\n        <p>Loading...</p>\r\n      </SinglePostContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SinglePostContainer>\r\n      <Post post={post} onLikeToggle={handleLikeToggle} />\r\n    </SinglePostContainer>\r\n  );\r\n};\r\n\r\nexport default SinglePostPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { API_BASE_URL } from \"./config\";\nexport const getAuthHeader = credentials => ({\n  Authorization: `Basic ${btoa(`${credentials.username}:${credentials.password}`)}`\n});\nexport const loginUser = async credentials => {\n  const response = await fetch(`${API_BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...getAuthHeader(credentials)\n    },\n    body: JSON.stringify(credentials)\n  });\n  if (!response.ok) throw new Error(\"Invalid credentials\");\n  return credentials;\n};\nexport const registerUser = async userData => {\n  const response = await fetch(`${API_BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    const data = await response.json();\n    throw new Error(data.detail || \"Registration failed\");\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","getAuthHeader","credentials","Authorization","btoa","username","password","loginUser","response","fetch","method","headers","body","JSON","stringify","ok","Error","registerUser","userData","data","json","detail"],"sources":["D:/Папка/Users/Administrator/Desktop/V семестр/Front-end/MKR/MKRL/microblog/src/api/auth.js"],"sourcesContent":["import { API_BASE_URL } from \"./config\";\r\n\r\nexport const getAuthHeader = (credentials) => ({\r\n  Authorization: `Basic ${btoa(\r\n    `${credentials.username}:${credentials.password}`\r\n  )}`,\r\n});\r\n\r\nexport const loginUser = async (credentials) => {\r\n  const response = await fetch(`${API_BASE_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...getAuthHeader(credentials),\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  });\r\n\r\n  if (!response.ok) throw new Error(\"Invalid credentials\");\r\n  return credentials;\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n  const response = await fetch(`${API_BASE_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(userData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const data = await response.json();\r\n    throw new Error(data.detail || \"Registration failed\");\r\n  }\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,UAAU;AAEvC,OAAO,MAAMC,aAAa,GAAIC,WAAW,KAAM;EAC7CC,aAAa,EAAE,SAASC,IAAI,CAC1B,GAAGF,WAAW,CAACG,QAAQ,IAAIH,WAAW,CAACI,QAAQ,EACjD,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAG,MAAOL,WAAW,IAAK;EAC9C,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,YAAY,QAAQ,EAAE;IACpDU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,GAAGV,aAAa,CAACC,WAAW;IAC9B,CAAC;IACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW;EAClC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxD,OAAOd,WAAW;AACpB,CAAC;AAED,OAAO,MAAMe,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,YAAY,WAAW,EAAE;IACvDU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACI,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAI,CAACV,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMI,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC,MAAM,IAAIJ,KAAK,CAACG,IAAI,CAACE,MAAM,IAAI,qBAAqB,CAAC;EACvD;EACA,OAAOb,QAAQ,CAACY,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}